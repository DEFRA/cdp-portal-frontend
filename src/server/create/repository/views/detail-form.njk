{% extends "layouts/page.njk" %}

{% from "read-out/macro.njk" import appReadOut %}
{% from "availability/macro.njk" import appAvailability %}
{% from "split-pane/macro.njk" import appSplitPane with context %}

{% set visibilityHintHtml %}
  Choose your new repository's visibility. For more information
  <a class="app-link"
     href="https://docs.github.com/en/enterprise-cloud@latest/repositories/creating-and-managing-repositories/about-repositories#about-repository-visibility"
     tabindex="-1"
     target="_blank" rel="noopener noreferrer">visit</a>
{% endset %}

{% block content %}
  {% call appSplitPane() %}
    {{ appStepNavigation(stepNavigation) }}

    <div class="govuk-main-wrapper app-main-wrapper">

      {{ appHeading({
        title: heading,
        caption: "Create a new code repository."
      }) }}

      <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-third">
          <form action="/create/repository/detail" method="post" data-js="app-form-errors">
            <input type="hidden" name="csrfToken" value="{{ csrfToken }}"/>
            <input type="hidden" name="redirectLocation" value="{{ redirectLocation }}"/>

            {% call govukFieldset({
              legend: {
                text: "Enter your new repositoy details",
                classes: "govuk-fieldset__legend--m"
              }
            }) %}

              {{ govukInput({
                label: {
                  text: "Repository name",
                  classes: "govuk-!-margin-bottom-0"
                },
                id: "repository-name",
                name: "repositoryName",
                classes: "app-input app-input--wide",
                hint: {
                  text: "Use lowercase words with hyphen separators and a maximum of 32 characters",
                  classes: "govuk-!-margin-bottom-1"
                },
                formGroup: {
                  classes: "app-form-group app-form-group-js"
                },
                value: formValues.repositoryName,
                attributes: {
                  "data-js": "app-availability app-read-out",
                  "data-availability-target-id": "repository-name-availability",
                  "data-read-out-target-id": "repository-name-read-out"
                },
                errorMessage: {
                  text: formErrors.repositoryName.message,
                  classes: "govuk-!-margin-bottom-1 app-error-message",
                  attributes: {
                    "data-js": "app-error"
                  }
                } if formErrors.repositoryName.message,
                suffix: {
                  classes: "app-input__suffix",
                  html: appAvailability({
                    dataFetcher: "fetchIsNameAvailable",
                    targetId: "repository-name-availability"
                  })
                }
              }) }}

              {{ appReadOut({
                description: "Your repository name will be ",
                targetId: "repository-name-read-out"
              }) }}


              {{ govukSelect({
                id: "repository-visibility",
                name: "repositoryVisibility",
                label: {
                  text: "Repository visbility",
                  classes: "govuk-!-margin-bottom-0"
                },
                classes: "app-select",
                hint: {
                  html: visibilityHintHtml,
                  classes: "govuk-!-margin-bottom-1"
                },
                formGroup: {
                  classes: "app-form-group app-form-group-js"
                },
                value: formValues.repositoryVisibility,
                errorMessage: {
                  text: formErrors.repositoryVisibility.message,
                  classes: "govuk-!-margin-bottom-1 app-error-message",
                  attributes: {
                    "data-js": "app-error"
                  }
                } if formErrors.repositoryVisibility.message,
                items: visibilityOptions
              }) }}

              {{ govukSelect({
                id: "team-id",
                name: "teamId",
                label: {
                  text: "Owning Team",
                  classes: "govuk-!-margin-bottom-0"
                },
                classes: "app-select",
                value: formValues.teamId,
                hint: {
                  text: "The CDP team that owns your repository",
                  classes: "govuk-!-margin-bottom-1"
                },
                formGroup: {
                  classes: "app-form-group app-form-group-js"
                },
                errorMessage: {
                  text: formErrors.teamId.message,
                  classes: "govuk-!-margin-bottom-1 app-error-message",
                  attributes: {
                    "data-js": "app-error"
                  }
                } if formErrors.teamId.message,
                items: teamsOptions
              }) }}

            {% endcall %}

            {{ govukButton({
              classes: "app-button",
              text: formButtonText
            }) }}

          </form>
        </div>
      </div>
    </div>

  {% endcall %}
{% endblock %}
