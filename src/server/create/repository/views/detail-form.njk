{% extends "layouts/page.njk" %}

{% from "read-out/macro.njk" import appReadOut %}
{% from "availability/macro.njk" import appAvailability %}

{% block content %}
  {{ appStepNavigation(stepNavigation) }}

  <div class="govuk-main-wrapper app-main-wrapper">

    {{ appHeading({
      title: heading,
      caption: "Create a new code repository."
    }) }}

    <div class="govuk-grid-row">
      <div class="govuk-grid-column-one-third">
        <form action="/create/repository/detail" method="post" data-js="app-form-errors">
          <input type="hidden" name="csrfToken" value="{{ csrfToken }}"/>
          <input type="hidden" name="redirectLocation" value="{{ redirectLocation }}"/>

          {% call govukFieldset({
            legend: {
              text: "Enter your new repositoy details",
              classes: "govuk-fieldset__legend--m"
            }
          }) %}

            {{ govukInput({
              label: {
                text: "Repository name",
                classes: "app-label"
              },
              id: "repository-name",
              name: "repositoryName",
              classes: "app-input app-input--wide",
              hint: {
                text: "Use lowercase words with hyphen separators and a maximum of 32 characters",
                classes: "app-hint"
              },
              formGroup: {
                classes: "app-form-group app-form-group-js"
              },
              value: formValues.repositoryName,
              attributes: {
                "data-js": "app-availability app-read-out",
                "data-availability-target-id": "repository-name-availability",
                "data-read-out-target-id": "repository-name-read-out",
                "data-1p-ignore": ""
              },
              errorMessage: {
                text: formErrors.repositoryName.message,
                classes: "app-error-message",
                attributes: {
                  "data-js": "app-error"
                }
              } if formErrors.repositoryName.message,
              suffix: {
                classes: "app-input__suffix",
                html: appAvailability({
                  dataFetcher: "fetchIsNameAvailable",
                  targetId: "repository-name-availability"
                })
              }
            }) }}

            {{ appReadOut({
              description: "Your repository name will be ",
              targetId: "repository-name-read-out"
            }) }}


            {{ govukSelect({
              id: "repository-visibility",
              name: "repositoryVisibility",
              label: {
                text: "Repository visbility",
                classes: "app-label"
              },
              classes: "app-select",
              hint: {
                html: "Choose your new repository's visibility",
                classes: "app-hint"
              },
              formGroup: {
                classes: "app-form-group app-form-group-js"
              },
              value: formValues.repositoryVisibility,
              errorMessage: {
                text: formErrors.repositoryVisibility.message,
                classes: "app-error-message",
                attributes: {
                  "data-js": "app-error"
                }
              } if formErrors.repositoryVisibility.message,
              items: visibilityOptions
            }) }}

            {{ govukSelect({
              id: "team-id",
              name: "teamId",
              label: {
                text: "Owning Team",
                classes: "app-label"
              },
              classes: "app-select",
              value: formValues.teamId,
              hint: {
                text: "The CDP team that owns your repository",
                classes: "app-hint"
              },
              formGroup: {
                classes: "app-form-group app-form-group-js"
              },
              errorMessage: {
                text: formErrors.teamId.message,
                classes: "app-error-message",
                attributes: {
                  "data-js": "app-error"
                }
              } if formErrors.teamId.message,
              items: teamsOptions
            }) }}

          {% endcall %}

          {{ govukButton({
            classes: "app-button",
            text: formButtonText
          }) }}

        </form>
      </div>
      {% set repoVisibilityHelpHtml %}
        <p class="govuk-!-margin-bottom-2">
          <b>Repository Visibility:</b>
        </p>
        <ul class="govuk-list govuk-list--bullet">
          <li> <b>Public</b> repository will be visible to everyone. DEFRA promotes coding in the open - repositories
            should be public by default.
          </li>
          <li> <b>Internal</b> repositories are visible to everyone in the DEFRA GitHub organisation</li>
          <li> <b>Private</b> repositories are visible to only members of your team - this should be used in very
            exceptional cases. Please reach out to <a class="app-link" href="{{ supportChannel }}" target="_blank" rel="noopener noreferrer">#cdp-support</a> if you are considering using this option.</li>
        </ul>
        <p class="govuk-!-margin-bottom-4">For more information please
          <a class="app-link"
             href="https://docs.github.com/en/enterprise-cloud@latest/repositories/creating-and-managing-repositories/about-repositories#about-repository-visibility"
             tabindex="-1"
             target="_blank" rel="noopener noreferrer">visit</a>. Contact <a class="app-link"
                                                                             href="{{ supportChannel }}" target="_blank"
                                                                             rel="noopener noreferrer">#cdp-support</a>
          for any questions.
        </p>
      {% endset %}

      <div class="govuk-grid-column-one-third">
        {{ appInfo({
          html: repoVisibilityHelpHtml
        }) }}
      </div>
    </div>
  </div>

{% endblock %}
