{% extends "layouts/page.njk" %}

{% from "availability/macro.njk" import appAvailability %}

{% block content %}
  {{ appStepNavigation(stepNavigation) }}

  <div class="govuk-main-wrapper app-main-wrapper">

    {{ appHeading({
      title: heading,
      caption: 'Built using <a href="https://webdriver.io/" class="app-link app-link--underline" target="_blank"
      rel="noopener noreferrer">webdriver.io</a>. Capable of running against a live environment or a docker compose
      setup as part of a GitHub workflow.'
    }) }}

    <div class="govuk-grid-row">
      <div class="app-grid-column app-grid-column-one-third-from-desktop-wide">
        <form action="/create/journey-test-suite/detail" method="post" data-js="app-form-errors"
              class="govuk-!-margin-bottom-4">
          <input type="hidden" name="csrfToken" value="{{ csrfToken }}" />
          <input type="hidden" name="redirectLocation" value="{{ redirectLocation }}" />

          {% call govukFieldset() %}

            {{ govukInput({
              label: {
                text: "Name",
                classes: "app-label"
              },
              id: "name",
              name: "repositoryName",
              classes: "app-input app-input--wide",
              hint: {
                html: "Lowercase letters, numbers and hyphens. Maximum 32 characters. E.g. seed-vault-journey-tests",
                classes: "app-hint"
              },
              formGroup: {
                classes: "app-form-group app-form-group-js"
              },
              value: formValues.repositoryName,
              attributes: {
                "data-js": "app-availability app-input-assistant",
                "data-availability-target-id": "test-suite-name-availability",
                "data-input-assistant-target-id": "name-input-assistant",
                "data-1p-ignore": ""
              },
              errorMessage: {
                text: formErrors.repositoryName.message,
                classes: "app-error-message",
                attributes: {
                  "data-js": "app-error"
                }
              } if formErrors.repositoryName.message,
              suffix: {
                classes: "app-input__suffix",
                html: appAvailability({
                  dataFetcher: "fetchIsNameAvailable",
                  targetId: "test-suite-name-availability"
                })
              }
            }) }}

            {{ appInputAssistant({
              message: "That name is not ideal. Read ‘Naming conventions’ for some tips",
              targetId: "name-input-assistant"
            }) }}

            {% if showTemplateTag %}
              {{ govukInput({
                label: {
                  text: "Template tag or branch",
                  classes: "app-label"
                },
                id: "template-tag",
                name: "templateTag",
                classes: "app-input app-input--wide",
                hint: {
                  html: "To override the tag or branch used for the template e.g. `main`. Defaults to latest release if left blank",
                  classes: "app-hint"
                },
                formGroup: {
                  classes: "app-form-group app-form-group-js"
                },
                value: formValues.templateTag,
                errorMessage: {
                  text: formErrors.templateTag.message,
                  classes: "app-error-message",
                  attributes: {
                    "data-js": "app-error"
                  }
                } if formErrors.templateTag.message
              }) }}
            {% endif %}

            {{ govukSelect({
              id: "team-id",
              name: "teamId",
              label: {
                text: "Owning Team",
                classes: "app-label"
              },
              classes: "app-select",
              value: formValues.teamId,
              hint: {
                text: "The CDP team that owns your repository",
                classes: "app-hint"
              },
              formGroup: {
                classes: "app-form-group app-form-group-js"
              },
              errorMessage: {
                text: formErrors.teamId.message,
                classes: "app-error-message",
                attributes: {
                  "data-js": "app-error"
                }
              } if formErrors.teamId.message,
              items: teamsOptions
            }) }}

          {% endcall %}

          {{ govukButton({
            classes: "app-button",
            text: formButtonText
          }) }}

        </form>
      </div>

      <div class="app-grid-column app-grid-column-one-third-from-desktop-wide">
        <div class="govuk-!-margin-bottom-4">
          {{ appNamingAdvice({
            kind: "journey test suite",
            categories: [
              "tests",
              "journey-tests",
              "acceptance-tests",
              "uat"
            ]
          } ) }}
        </div>
      </div>
    </div>
  </div>
{% endblock %}
