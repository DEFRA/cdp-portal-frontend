{% extends "layouts/page.njk" %}

{% from "read-out/macro.njk" import appReadOut %}

{% block content %}

  {{ appHeading({
    title: heading,
    caption: "Create a new Micro-service Code Repository and Infrastructure."
  }) }}

  {% call appPageBody() %}
    <form action="{{ appPathPrefix }}/create-service" method="post" data-js="app-form-errors">
      <input type="hidden" name="csrfToken" value="{{ csrfToken }}"/>

      {% call govukFieldset({
        legend: {
          text: "Enter your new service details",
          classes: "govuk-fieldset__legend--m"
        }
      }) %}

        {{ govukInput({
          label: {
            text: "Repository name",
            classes: "govuk-!-margin-bottom-0"
          },
          id: "repository-name",
          name: "repositoryName",
          classes: "app-input app-input--wide",
          hint: {
            text: "Use lowercase words with hyphen separators",
            classes: "govuk-!-margin-bottom-1"
          },
          formGroup: {
            classes: "app-form-group app-form-group-js"
          },
          value: formValues.repositoryName,
          attributes: {
            "data-js": "app-read-out",
            "data-target-id": "repository-name-read-out"
          },
          errorMessage: {
            text: formErrors.repositoryName.message,
            classes: "govuk-!-margin-bottom-1 app-error-message",
            attributes: {
              "data-js": "app-error"
            }
          } if formErrors.repositoryName.message
        }) }}

        {{ appReadOut({
          description: "Your repository name will be ",
          targetId: "repository-name-read-out"
        }) }}


        {{ govukSelect({
          id: "service-type",
          name: "serviceType",
          label: {
            text: "Service Type",
            classes: "govuk-!-margin-bottom-0"
          },
          classes: "app-select",
          hint: {
            text: "The template your service is created from",
            classes: "govuk-!-margin-bottom-1"
          },
          formGroup: {
            classes: "app-form-group app-form-group-js"
          },
          value: formValues.serviceType,
          errorMessage: {
            text: formErrors.serviceType.message,
            classes: "govuk-!-margin-bottom-1 app-error-message",
            attributes: {
              "data-js": "app-error"
            }
          } if formErrors.serviceType.message,
          items: serviceTypesOptions
        }) }}

        {{ govukSelect({
          id: "owning-team",
          name: "owningTeam",
          label: {
            text: "Owning Team",
            classes: "govuk-!-margin-bottom-0"
          },
          classes: "app-select",
          value: formValues.owningTeam,
          hint: {
            text: "The team that owns your service",
            classes: "govuk-!-margin-bottom-1"
          },
          formGroup: {
            classes: "app-form-group app-form-group-js"
          },
          errorMessage: {
            text: formErrors.owningTeam.message,
            classes: "govuk-!-margin-bottom-1 app-error-message",
            attributes: {
              "data-js": "app-error"
            }
          } if formErrors.owningTeam.message,
          items: teamsOptions
        }) }}
      {% endcall %}

      {{ appButton({
        text: "Create",
        loader: {
          name: "create-submit-button"
        }
      }) }}

    </form>

  {% endcall %}

{% endblock %}
