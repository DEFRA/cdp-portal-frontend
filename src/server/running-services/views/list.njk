{% extends "layouts/page.njk" %}

{% block content %}

  {{ appPageHeading({
    caption: "Whats running where?",
    text: "Running Services",
    intro: "All CDP running services, with microservice details and status per environment"
  }) }}

  {% call appFilters({
    action: "/running-services",
    noJsButton: {
      text: "Search"
    },
    legend: {
      text: "Search",
      classes: "govuk-fieldset__legend--l govuk-!-margin-bottom-2"
    },
    caption: {
      text: "Search and filter running microservices"
    },
    clear: {
      url: "/running-services"
    }
  }) %}
    <div class="app-filters__item">
      {{ appAutocomplete({
        id: "filters-service",
        name: "service",
        classes: "app-autocomplete--medium app-autocomplete--inline",
        label: {
          text: "Service name",
          classes: "govuk-label--s app-label--inline govuk-!-margin-bottom-1"
        },
        icon: appSearchIcon(),
        formGroup: {
          classes: "app-form-group--inline"
        },
        value: formValues.service,
        suggestions: serviceFilters,
        typeahead: true,
        placeholder: "Search by service"
      }) }}
    </div>

    <div class="app-filters__item">
      {{ appAutocomplete({
        id: "filters-team",
        name: "team",
        classes: "app-autocomplete--small app-autocomplete--inline",
        label: {
          text: "Team",
          classes: "govuk-label--s app-label--inline govuk-!-margin-bottom-1"
        },
        formGroup: {
          classes: "app-form-group--inline"
        },
        value: formValues.team,
        suggestions: teamFilters
      }) }}
    </div>

    <div class="app-filters__item">
      {{ appAutocomplete({
        id: "filters-user",
        name: "user",
        classes: "app-autocomplete--inline",
        label: {
          text: "User",
          classes: "govuk-label--s app-label--inline govuk-!-margin-bottom-1"
        },
        formGroup: {
          classes: "app-form-group--inline"
        },
        value: formValues.user,
        suggestions: userFilters
      }) }}
    </div>

    <div class="app-filters__item">
      {{ appAutocomplete({
        id: "filters-status",
        name: "status",
        classes: "app-autocomplete--tiny app-autocomplete--inline",
        label: {
          text: "Status",
          classes: "govuk-label--s app-label--inline govuk-!-margin-bottom-1"
        },
        formGroup: {
          classes: "app-form-group--inline"
        },
        value: formValues.status,
        suggestions: statusFilters
      }) }}
    </div>
  {% endcall %}

  {% block xhrContent %}
    <div data-xhr="running-services">
      {{ appEntityTable(tableData) }}
    </div>
  {% endblock %}

{% endblock %}
